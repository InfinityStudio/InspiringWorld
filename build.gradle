// InspiringWorld Mod BuildScript
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

version = System.getenv("BUILD_NUMBER") != null ? mod_version + "." + System.getenv("BUILD_NUMBER") + "-SNAPSHOT" : mod_version
group = mod_group
archivesBaseName = mod_name

def commonManifest = {
    attributes 'FMLAT': 'inspiringworld_at.cfg'
}

minecraft {
    version = minecraft_version + "-" + forge_version
    runDir = "run"
	useDepAts = use_dep_ats
    mappings = mcp_version

    replace "@version@", project.version
}

sourceSets {
    main {
        java {
            if (!project.hasProperty('magiconly')) { srcDir 'src/tech/java/' }
            if (!project.hasProperty('techonly')) { srcDir 'src/magic/java/' }
        }
        resources {
            if (!project.hasProperty('magiconly')) { srcDir 'src/tech/resources/' }
            if (!project.hasProperty('techonly')) { srcDir 'src/magic/resources/' }
            srcDir "src/main/resources/"
        }
    }
    api {
        java {
            srcDir 'src/api/java/'
        }
		resources null
        // {
        //     srcDir "src/main/resources/"
        // }
    }
}

idea {
    module {
        sourceDirs += sourceSets.main.allSource.getSrcDirs()
        sourceDirs += sourceSets.api.allSource.getSrcDirs()
    }
}

task apiJar(type: Jar, dependsOn: sourceJar) {
    from 'build/sources/api/java/'
    baseName = mod_api_name
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from 'build/docs/javadoc/'
    classifier = 'javadoc'
}

artifacts {
    archives apiJar
    archives javadocJar
    archives sourceJar
}

dependencies {
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
